if (typeof(TelerikNamespace)=="undefi\x6eed"){var TelerikNamespace=new Object( ); } ( function ( ){TelerikNamespace.Utils= {EncodePostbackContent:function (content){for (var i=0; i<mc_charsToEncode.length; i++){content=content.replace(mc_reToEncode[i],mc_encodedChars[i]); }return content; } ,DecodePostbackContent:function (content){for (var i=mc_charsToEncode.length-1; i>=0; i--){content=content.replace(mc_reToDecode[i],mc_charsToEncode[i]); }return content; } ,AppendStyleSheet:function (clientID,pathToCssFile){var isSafari=(navigator.userAgent.toLowerCase( ).indexOf("saf\x61ri")!=-1); if (isSafari){TelerikNamespace.Utils.AddStyleSheet(pathToCssFile,document); }else {var oElem=document.getElementById(clientID+"StyleSh\x65etHold\x65r"); if (oElem){var linkObject=document.createElement("LINK"); linkObject.rel="\x73tylesh\x65\145\x74"; linkObject.type="text/css"; linkObject.href=pathToCssFile; oElem.appendChild(linkObject); }}} ,AddStyleSheet:function (sStyleSheetUrl,oDocument){var theDoc=oDocument!=null?oDocument:document; var oLink=theDoc.createElement("\x6cink"); oLink.setAttribute("h\x72ef",sStyleSheetUrl,0); oLink.setAttribute("type","\x74ext/css"); oLink.setAttribute("r\x65l","styleshe\x65t",0); var oHead=theDoc.getElementsByTagName("\x68ead")[0]; if (TelerikNamespace.Utils.DetectBrowser("sa\x66ari")){var addSheet= function ( ){oHead.appendChild(oLink); };window.setTimeout(addSheet,200); }else {oHead.appendChild(oLink); }return oLink; } ,DetectBrowser:function (bName){bName=bName.toLowerCase( ); if ("\x69e"==bName)bName="m\x73ie"; else if ("\x6doz\x69\154\x6ca"==bName || "\x66ire\x66\157\x78"==bName)bName="\x63omp\x61\x74ib\x6c\145"; var detect=navigator.userAgent.toLowerCase( ); place=detect.indexOf(bName)+1; if (place)return true; else return false; }};var mc_charsToEncode=['%','\074','\x3e','\x21','\x22','\x23','$','\x26','\047','\x28','\x29',',',':',';','\x3d','\x3f','\x5b','\x5c',']','^','\x60','{','|','}','\x7e','+']; var mc_encodedChars=[ ]; var mc_reToEncode=[ ]; var mc_reToDecode=[ ]; for (var i=0; i<mc_charsToEncode.length; i++){var hex=mc_charsToEncode[i].charCodeAt(0).toString(16); mc_encodedChars[i]="\x25"+hex; mc_reToEncode[i]=new RegExp("\134x"+hex,"\x67"); mc_reToDecode[i]=new RegExp("%"+hex,"\x69g"); }} )( );
